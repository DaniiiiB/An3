program ::= "START" decllist ";" cmpdstmt "FINISH" 
vecident ::= IDENTIFIER | IDENTIFIER"["zan"]"
ident ::= vecident | vecident"-"ident
printable ::= ident | CONSTANT
word ::= word "POWER_PRESS" word
declist ::= {structdecl} decllistsimple
decllistsimple ::= declaration | declaration ";" decllist
declaration ::= type vecident
type ::= "za_number" | "singleton" | "word" | structname
structdecl ::= "STRUCTURE" structname "{" decllist "}"
structname ::= IDENTIFIER
cmpdstmt ::= stmtlist "GIVE_BACK" expression";"
stmtlist ::= stmt";" | stmt ";" stmtlist
stmt ::= simplstmt | structstmt
simplstmt ::= assignstmt | iostmt
assignstmt ::= ident "GET" expression
expression ::= term "ADDO" expression | term "CATTO" expression | term
term ::= factor "*" term | factor "/" term | factor "%" term | factor
factor ::= "(" expression ")" | ident | CONSTANT
iostmt ::= "FILL" ident | "SHOW_ME" printable
structstmt ::= ifstmt | whilestmt | forstmt
ifstmt ::= "IF_YES" "("condition")" "THEN" "{"stmt"}" ["IF_NO" "{"stmt"}"]
whilestmt ::= "WHILE" "("condition")" "MAKE_MAGIC" "{"stmt"}"
forstmt ::= "FOR" "("ident";"condition;assignstmt")" "MAKE_MAGIC" "{"stmt"}"
condition ::= expression RELATION expression | condition {"AND" condition} | condition {"OR" condition}
RELATION ::= "LT" | "LTOREQ" | "EQ" | "NEQ" | "GTOREQ" | "GT"


program ::= 13 declist 8 cmpdstmt 14
vecident ::= 401 | 401 4 zan 5
ident ::= vecident | vecident 10 ident
printable ::= ident | 402
declist ::= structdecl decllistsimple | decllistsimple
decllistsimple ::= declaration | declaration 8 decllist
declaration ::= type vecident
type ::= 11 | 12 | structname
structdecl ::= 41 structname 6 decllist 7
structname ::= 401
cmpdstmt ::= stmtlist 17 expression 8
stmtlist ::= stmt 8 | stmt 8 stmtlist
stmt ::= simplstmt | structstmt
simplstmt ::= assignstmt | iostmt
assignstmt ::= ident 18 expression
expression ::= term 32 expression | term 33 expression | term
term ::= factor 2 term | factor 3 term | factor 37 term | factor
factor ::= 39 expression 40 | ident | 402
iostmt ::= 15 ident | 16 printable
structstmt ::= ifstmt | whilestmt | forstmt
ifstmt ::= 19 39 condition 40 21 6 stmt 7 | 
			19 39 condition 40 21 6 stmt 7 20 6 stmt 7
whilestmt ::= 22 39 condition 40 24 6 stmt 7
forstmt ::= 23 39 ident 8 condition 8 assignstmt 40 24 6 stmt 7
condition ::= expression relation expression
relation ::= 26 | 28 | 25 | 42 | 29 | 27